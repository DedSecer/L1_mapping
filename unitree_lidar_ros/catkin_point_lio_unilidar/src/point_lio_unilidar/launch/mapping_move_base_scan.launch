<launch>
	<!-- Launch file for Velodyne16 VLP-16 LiDAR -->

	<arg name="rviz" default="true" />

	<node pkg="point_lio_unilidar" type="pointlio_mapping" name="laserMapping" output="screen">
		<rosparam command="load" file="$(find point_lio_unilidar)/config/unilidar.yaml" />
		
		<!--change to 1 to use IMU as input of Point-LIO-->
		<param name="use_imu_as_input" type="bool" value="0"/>
		
		<param name="prop_at_freq_of_imu" type="bool" value="1"/>
		<param name="check_satu" type="bool" value="1"/>
		<param name="init_map_size" type="int" value="10"/>
		<param name="point_filter_num" type="int" value="1"/> <!--4, 3-->

		<param name="space_down_sample" type="bool" value="1" />
		<param name="filter_size_surf" type="double" value="0.1" /> <!--0.5, 0.3, 0.2, 0.15, 0.1-->
		<param name="filter_size_map" type="double" value="0.1" /> <!--0.5, 0.3, 0.15, 0.1-->
		<param name="cube_side_length" type="double" value="1000" /> <!--2000-->
		<param name="runtime_pos_log_enable" type="bool" value="0" /> <!--1-->
	</node>
	    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">


        <remap from="cloud_in" to="cloud_registered"/>
        <!-- <remap from="scan" to="depth/scan_filtered"/> -->
        <rosparam>
            target_frame: aft_mapped # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -1
            max_height: 1

            angle_min: -1.5708 # -M_PI/2
            angle_max: 1.5708 # M_PI/2
            angle_increment: 0.0087 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.45
            range_max: 5
            use_inf: false

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>

	<!-- <node pkg="pcl_to_grid" type="cloud_subscriber" name="cloud_subscrier" output="screen"></node> -->
	<node name="map_server" pkg="map_server" type="map_server" args="$(find point_lio_unilidar)/map/new_map.yaml"   >
		<param name="frame_id" value="camera_init" />
	</node>
	<node pkg="amcl" type="amcl" name="amcl" output="screen">
		<param name="initial_pose_x" value="0" />
		<param name="initial_pose_y" value="0" />
		<param name="initial_pose_a" value="0" />
		<param name="initial_pose_xx" value="0.01" />
		<param name="initial_pose_yy" value="0.01" />
		<param name="initial_pose_aa" value="0.01" />
	</node>

	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	<rosparam file="$(find point_lio_unilidar)/scan_params/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
		<rosparam file="$(find point_lio_unilidar)/scan_params/costmap_common_params.yaml" command="load" ns="local_costmap" />
		<rosparam file="$(find point_lio_unilidar)/scan_params/local_costmap_params.yaml" command="load" />
		<rosparam file="$(find point_lio_unilidar)/scan_params/global_costmap_params.yaml" command="load" /> 
		<rosparam file="$(find point_lio_unilidar)/scan_params/base_local_planner_params.yaml" command="load" />
	</node>

	<group if="$(arg rviz)">
		<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find point_lio_unilidar)/rviz_cfg/loam_livox.rviz" />
	</group> launch-prefix="gdb -ex run --args"

</launch>